import os
from pytube import YouTube
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes

# üîë –í–°–¢–ê–í–¨ –°–Æ–î–ê –°–í–û–ô –¢–û–ö–ï–ù –æ—Ç BotFather
TELEGRAM_BOT_TOKEN = '8135489502:AAFmNNrLtp08hM4bkLIm4pRhs4cSFkggpfE'

# üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –∏–ª–∏ –∞—É–¥–∏–æ
def download_youtube_media(url: str, format: str, output_path='downloads'):
    yt = YouTube(url)

    if not os.path.exists(output_path):
        os.makedirs(output_path)

    if format == 'video':
        stream = yt.streams.filter(progressive=True, file_extension='mp4', res="360p").first()
        if not stream:
            raise Exception("–í–∏–¥–µ–æ –≤ 360p –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        file_path = stream.download(output_path=output_path)
    elif format == 'audio':
        stream = yt.streams.filter(only_audio=True).first()
        if not stream:
            raise Exception("–ê—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        file_path = stream.download(output_path=output_path)
        base, _ = os.path.splitext(file_path)
        mp3_path = base + '.mp3'
        os.rename(file_path, mp3_path)
        file_path = mp3_path
    else:
        raise Exception("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.")

    print(f"‚úÖ –°–∫–∞—á–∞–Ω–æ: {file_path}")
    return file_path

# üü¢ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ —Å YouTube.")

# üì© –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()

    if not url.startswith("http"):
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ context
    context.user_data['youtube_url'] = url

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = [
        [InlineKeyboardButton("üìπ –í–∏–¥–µ–æ (360p)", callback_data='video')],
        [InlineKeyboardButton("üéß –ê—É–¥–∏–æ (MP3)", callback_data='audio')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∞—á–∞—Ç—å?", reply_markup=reply_markup)

# üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
async def handle_format_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    format = query.data
    url = context.user_data.get('youtube_url')

    if not url:
        await query.edit_message_text("‚ùó –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤—å –µ—ë —Å–Ω–æ–≤–∞.")
        return

    await query.edit_message_text("‚è¨ –ó–∞–≥—Ä—É–∂–∞—é, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")

    try:
        file_path = download_youtube_media(url, format)

        with open(file_path, 'rb') as f:
            if format == 'video':
                await query.message.reply_video(video=f)
            else:
                await query.message.reply_audio(audio=f)

        os.remove(file_path)
        print(f"üóë –£–¥–∞–ª—ë–Ω —Ñ–∞–π–ª: {file_path}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        await query.message.reply_text(f"–û—à–∏–±–∫–∞: {e}")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")

    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(CallbackQueryHandler(handle_format_choice))

    print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
    app.run_polling()

if __name__ == 'main':
    main()